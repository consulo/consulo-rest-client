{
  parserClass="org.javamaster.httpclient.parser.HttpParser"
  parserUtilClass="org.javamaster.httpclient.parser.HttpParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Http"
  psiImplClassSuffix="Impl"
  psiPackage="org.javamaster.httpclient.psi"
  psiImplPackage="org.javamaster.httpclient.psi.impl"

  elementTypeHolderClass="org.javamaster.httpclient.psi.HttpTypes"
  elementTypeClass="org.javamaster.httpclient.psi.HttpElementType"
  tokenTypeClass="org.javamaster.httpclient.psi.HttpTokenType"
  psiImplUtilClass="org.javamaster.httpclient.psi.impl.HttpPsiImplUtil"

  tokens=[
    T_LT='<'
    T_RT='>'
    T_RT_DBL='>>'
    PATH='regexp:(([A-E]:)|[a-z./])([\u4E00-\u9FA5\w\-./\\]+/?)+'
    URL_DESC='regexp:(https?|wss?|\{\{)[-\w+&${}()#/%?=~|!:,.;]*[-\w+,&${}()#/%=~| ]'
    HEADER_DESC='regexp:[a-zA-Z\-]+:[\u4E00-\u9FA5\w,${}()=;%\\".\-*:/ ]+'
    REQUEST_COMMENT='regexp:#.*'
    LINE_COMMENT='regexp://.*'
    VARIABLE_DEFINE='regexp:@\w+[\w{}=]+'
    URL_FORM_ENCODE="regexp:[\w,&$={}():]*"
    // 没有找到办法处理 JSON 串内的 # 和 >,所以目前实现里 JSON 串不能包含 # 和 >,否则无法匹配
    JSON_TEXT="regexp:\{}|\[]|\{[\s\"][^#>]*}|\[[\s\d\"a-z{][^#>]*]"
    XML_TEXT="regexp:<[!\w][^♣]*\w>"
    MULTIPART_SEPERATE='regexp:--[\w\-]+'
    JS_SCRIPT='regexp:\{%[^#]*%}'
    SPACE='regexp:\s+'
  ]
}
httpFile ::= (request | globalVariableDefinition | globalScript)*
request ::= method url version? headers? body? script? output_file? {
    pin = 1
}
url ::= URL_DESC {
    methods = [
        getReferences
    ]
}
version ::= 'HTTP/1.1' | 'HTTP/2.0'
method ::= GET | POST | DELETE | PUT
headers ::= header* {
   methods = [
       getReferences
   ]
}
header ::= HEADER_DESC
body ::= ordinary_content | multipart_content
script ::= T_RT JS_SCRIPT {
    mixin = "org.javamaster.httpclient.inject.HttpPsiLanguageInjectionHost"
}
globalScript ::= script
globalVariableDefinition ::= VARIABLE_DEFINE
ordinary_content ::= file | URL_FORM_ENCODE | JSON_TEXT | XML_TEXT | URL_DESC {
    mixin = "org.javamaster.httpclient.inject.HttpPsiLanguageInjectionHost"
}
file ::= T_LT file_path
output_file ::= T_RT_DBL file_path
file_path ::= PATH
multipart_content ::= multipart_body* MULTIPART_SEPERATE
multipart_body ::= MULTIPART_SEPERATE header* ordinary_content